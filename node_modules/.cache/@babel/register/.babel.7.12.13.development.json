{
  "{\"sourceRoot\":\"/Users/apple/Desktop/Slutprojekt/final-project-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/apple/Desktop/Slutprojekt/final-project-backend\",\"filename\":\"/Users/apple/Desktop/Slutprojekt/final-project-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/apple/Desktop/Slutprojekt/final-project-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/apple/Desktop/Slutprojekt/final-project-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/apple/Desktop/Slutprojekt/final-project-backend",
      "filename": "/Users/apple/Desktop/Slutprojekt/final-project-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/apple/Desktop/Slutprojekt/final-project-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/apple/Desktop/Slutprojekt/final-project-backend/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/apple/Desktop/Slutprojekt/final-project-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/apple/Desktop/Slutprojekt/final-project-backend/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/////////////////////////////////////////////////\n///      A U T H E N T I C A T I O N      /////\n///////////////////////////////////////////////\nvar User = _mongoose[\"default\"].model('User', {\n  name: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n});\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return User.findOne({\n              accessToken: req.header('Authorization')\n            });\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              req.user = user;\n              next();\n            } else {\n              res.status(401).json({\n                loggedOut: true\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); /////////////////////////////////////////////////\n///      D A T A B A S E     ///////////////////\n///////////////////////////////////////////////\n// Database for project \n\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/finalProject';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; //Collection for database. \n\nvar Game = _mongoose[\"default\"].model('Game', {\n  directions: {\n    type: String,\n    required: true\n  },\n  question: {\n    type: String,\n    required: true\n  },\n  hint: {\n    type: String,\n    required: true\n  },\n  answer: {\n    type: String,\n    required: true\n  }\n}); //Port 3000 npm start \n\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); //middleware to enable cors and json body parsing \n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json()); //start defining my routes here: \n\napp.get('/', function (req, res) {\n  res.send(\"Hello Final project! 😍 \");\n}); //PICKS     ONE RANDOM  \n\napp.get('/games', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var games, randomGame;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Game.find();\n\n          case 2:\n            games = _context2.sent;\n            randomGame = games[Math.floor(Math.random() * games.length)];\n            res.json(randomGame);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // ALL GAMES\n\napp.get('/gamesarray', function (req, res) {\n  Game.find().then(function (games) {\n    res.json(games);\n  });\n}); //POSTING NEW OBJECTS \n\napp.post('/gamesarray', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var game, savedGame;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            game = new Game(req.body);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return game.save();\n\n          case 4:\n            savedGame = _context3.sent;\n            res.status(201).json(savedGame);\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400).json({\n              message: \"Please fill out all boxes to build the game\",\n              error: _context3.t0.errors\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // DELETING OBJECTS \n\napp[\"delete\"]('/games/:id', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return Game.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            // Send a successful response \n            res.status(200).json({\n              success: true\n            });\n            _context4.next = 10;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0); // Inform client about deletion failure \n\n            res.status(400).json({\n              success: false\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 6]]);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/users', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body, name, password, user;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            try {\n              _req$body = req.body, name = _req$body.name, password = _req$body.password;\n              user = new User({\n                name: name,\n                password: _bcryptNodejs[\"default\"].hashSync(password)\n              });\n              user.save();\n              res.status(201).json({\n                id: user._id,\n                accessToken: user.accessToken\n              });\n            } catch (err) {\n              res.status(400).json({\n                message: 'Could not create user',\n                errors: err.errors\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // Secret endpoint for auth --- Not really being used\n\napp.get('/secrets', authenticateUser);\napp.get('/secrets', function (req, res) {\n  res.json({\n    secret: 'Hello secret message'\n  });\n}); // Logging in \n\napp.post('/sessions', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return User.findOne({\n              name: req.body.name\n            });\n\n          case 2:\n            user = _context6.sent;\n\n            if (user && _bcryptNodejs[\"default\"].compareSync(req.body.password, user.password)) {\n              //Success\n              res.json({\n                userId: user._id,\n                accessToken: user.accessToken\n              });\n            } else {\n              //failure: user does not exist or passsword does not match \n              res.json({\n                notFound: true\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}()); // Starting the server \n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n}); //////////////////////////////////////////////////////\n////// D E L E T E  W H E N  F I N I S H E D /////////\n//////////////////////////////////////////////////////\n// // Created User with one-way encryption \n// const user = new User({name: \"MrMittens\", password: bcrypt.hashSync(\"GinTonic\") }) \n// user.save()\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "User",
        "mongoose",
        "model",
        "name",
        "type",
        "String",
        "unique",
        "password",
        "required",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "authenticateUser",
        "req",
        "res",
        "next",
        "findOne",
        "header",
        "user",
        "status",
        "json",
        "loggedOut",
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Game",
        "directions",
        "question",
        "hint",
        "answer",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "get",
        "send",
        "find",
        "games",
        "randomGame",
        "Math",
        "floor",
        "random",
        "length",
        "then",
        "post",
        "game",
        "body",
        "save",
        "savedGame",
        "message",
        "error",
        "errors",
        "deleteOne",
        "_id",
        "params",
        "id",
        "success",
        "console",
        "log",
        "bcrypt",
        "hashSync",
        "err",
        "secret",
        "compareSync",
        "userId",
        "notFound",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/apple/Desktop/Slutprojekt/final-project-backend/",
      "sourcesContent": [
        "import express from \"express\"\nimport cors from \"cors\"\nimport bodyParser from \"body-parser\"\nimport mongoose from 'mongoose'\nimport crypto from 'crypto'\nimport bcrypt from 'bcrypt-nodejs'\n\n/////////////////////////////////////////////////\n///      A U T H E N T I C A T I O N      /////\n///////////////////////////////////////////////\n\n\nconst User = mongoose.model('User', {\n    name:{\n        type: String,\n        unique: true,\n    },\n    password:{\n        type: String,\n        required: true,\n    },\n    accessToken:{\n        type: String,\n        default: () => crypto.randomBytes(128).toString('hex'),\n    }\n})\n\nconst authenticateUser = async ( req, res, next ) => {\n    const user = await User.findOne({accessToken: req.header('Authorization')})\n    if(user){\n        req.user = user\n        next()\n    } else {\n        res.status(401).json({loggedOut: true })\n    }\n}\n\n/////////////////////////////////////////////////\n///      D A T A B A S E     ///////////////////\n///////////////////////////////////////////////\n\n// Database for project \nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/finalProject'\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\n\n\n//Collection for database. \nconst Game = mongoose.model('Game', {\n    directions: {\n        type: String,\n        required: true,\n    },\n    question: {\n        type: String,\n        required: true\n    },\n    hint: {\n        type: String,\n        required: true\n    },\n    answer: {\n        type: String,\n        required: true\n    },\n})\n\n//Port 3000 npm start \nconst port = process.env.PORT || 8080\nconst app = express ()\n\n//middleware to enable cors and json body parsing \napp.use(cors())\napp.use(bodyParser.json())\n\n//start defining my routes here: \napp.get('/', (req, res) => {\n    res.send(\"Hello Final project! 😍 \")\n})\n\n//PICKS     ONE RANDOM  \napp.get('/games', async (req, res) => {\n    const games = await Game.find()\n    const randomGame = games[Math.floor(Math.random() * games.length)]\n    res.json(randomGame)\n})\n\n// ALL GAMES\napp.get('/gamesarray', (req, res) => {\n    Game.find().then(games => {\n        res.json(games)\n    })\n})\n\n//POSTING NEW OBJECTS \napp.post('/gamesarray', async (req, res) => {\n    const game = new Game(req.body)\n\n    try{\n        const savedGame = await game.save()\n        res.status(201).json(savedGame)\n    }catch (err) {\n        res.status(400).json({ message: \"Please fill out all boxes to build the game\", error:err.errors})\n    }\n})\n// DELETING OBJECTS \n app.delete('/games/:id', async (req, res) => {\n     try {\n         //Try to delete game \n         await Game.deleteOne({ _id: req.params.id })\n         \n         // Send a successful response \n         res.status(200).json({ success: true })\n     } catch (error) {\n         console.log(error)\n\n         // Inform client about deletion failure \n         res.status(400).json({success: false })\n     }\n })\n\n app.post('/users', async (req,res) =>{\n    try{\n      const {name, password} = req.body;\n      const user = new User({name, password: bcrypt.hashSync(password)});\n      user.save();\n      res.status(201).json({id:user._id, accessToken:user.accessToken});\n    }catch(err){\n      res.status(400).json({message: 'Could not create user', errors: err.errors});\n    }\n  })\n\n // Secret endpoint for auth --- Not really being used\n app.get('/secrets', authenticateUser); \napp.get('/secrets', (req, res) => {\n  res.json({secret: 'Hello secret message'});\n})\n\n\n// Logging in \napp.post('/sessions', async (req, res) => {\n    const user = await User.findOne({name:req.body.name}) \n    if (user && bcrypt.compareSync(req.body.password, user.password)){\n        //Success\n        res.json({userId: user._id, accessToken: user.accessToken})\n    } else {\n        //failure: user does not exist or passsword does not match \n        res.json({notFound: true})\n    }\n})\n\n\n// Starting the server \napp.listen(port, () => {\n    console.log(`Server running on http://localhost:${port}`)\n})\n\n\n\n\n\n\n\n//////////////////////////////////////////////////////\n////// D E L E T E  W H E N  F I N I S H E D /////////\n//////////////////////////////////////////////////////\n\n\n\n// // Created User with one-way encryption \n// const user = new User({name: \"MrMittens\", password: bcrypt.hashSync(\"GinTonic\") }) \n// user.save()"
      ]
    },
    "sourceType": "script",
    "mtime": 1613053014465
  }
}